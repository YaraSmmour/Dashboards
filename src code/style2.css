
// Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover, 
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em transparent;
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow: 
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);  
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {  
  box-shadow: 
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);
  
  &:hover,
  &:focus {
    box-shadow: 
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
  // Make a map with the class names and matching colors
$colors: (
  student: #1B7524,
  employee: #999999
  
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {  
  color: var(--color);
  transition: 0.25s;
  
  &:hover,
  &:focus { 
    border-color: var(--hover);
    color: #fff;
  }
}


body {
	align-items: center;
	background-color: var(--white);
	background: url("https://s3.ap-south-1.amazonaws.com/gotouniv/cover_photo/1641/cover_photo_1500X500.jpg");
	backdrop-filter: blur(10px);
	background-attachment: fixed;
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	display: grid;
	height: 100vh;
	place-items: center;
}


.student{
  background: #999999;
  border: 2px solid;
  font: inherit;
  font-size: 20px;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
  color: #000000 
}
.close{
  background: #999999;
  border: 2px solid;
  font: inherit;
  font-size: 25px;
  line-height: 1;
  //margin: 0.5em;
 // padding: 1em 2em;
  color: #000000 
  }

.employee{
  background: #999999;
  border: 2px solid;
  font: inherit;
  font-size: 20px;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
  color: #000000 
}

h1 { font-weight: 400;
color: white ;
 text-align: center;
 font-size: 50px;
}
.buttons
{
  possition: relative ;
}

.buttons img{
position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
}
.close{
position: absolute;
  top: 0;
  right: 0;
  //bottom: 0;
  //left: 0;
  display: flex;
  justify-content: flex-end;
  align-items: flex-start;
}
code { 
  color: #ffffff;
  //font: inherit;
}